// Section
// -----------------------------------------------------------------------------------------

.section {

	.section-inner {
		position: relative;

		@each $name, $map in $section-styles {
			&.section-style-#{str-replace(#{$name}, ' ', '-')} {
				color: map-get($map, color);

				.section-bg {
					background-color: map-get($map, background-color);
				}

				.swiper-button-prev,
				.swiper-button-next {
					stroke: map-get($map, color);
				}

				.swiper-pagination-bullet-active {
					background: map-get($map, color);
				}

				.swiper-pagination-progressbar-fill {
					background: map-get($map, color);
				}
			}
		}
	}

	.section-content {
		position: relative;

		.container,
		.container-fluid {
			padding-top: $grid-gutter-width / 2;
			padding-bottom: $grid-gutter-width / 2;
		}
	}

	.section-bg {
		position: absolute;
	    top: 0;
	    right: 0;
	    bottom: 0;
	    left: 0;
	    background-size: cover;
		background-repeat: no-repeat;
		overflow: hidden;
    	pointer-events: none;
    	z-index: -1;
	}

	@each $key, $val in $section-spacers-content {
		@include media-breakpoint-up(md) {
			.section-spacing-content-#{$key} {

				.container,
				.container-fluid {

					.row {
						margin-left: -#{$val};
						margin-right: -#{$val};

						> .col,
						> [class*="col-"] {
							padding-right: $val;
							padding-left: $val;
						}
					}
				}
			}
		}
	}

	@each $key, $val in $section-spacers-height {
		@include media-breakpoint-up(md) {
			.section-height-#{$key} {
				padding-top: $val;
				padding-bottom: $val;
			}
		}
	}

	@each $key, $val in $section-spacers-inner {
		@include media-breakpoint-up(md) {
			.section-spacing-inner-#{$key} {
				.container,
				.container-fluid {
					padding: $val;
				}
			}
		}
	}
}