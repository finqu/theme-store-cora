// Mixins
// -----------------------------------------------------------------------------------------

@mixin section-form-control-focus($color, $bg, $border, $boxShadow, $focusBoxShadow) {

	&:focus {
		color: $color;
		background-color: $bg;
		border-color: color-yiq($border, darken($border, 10%), lighten($border, 10%));
		outline: 0;
		@if $enable-shadows {
			@include box-shadow($boxShadow, $focusBoxShadow);
		} @else {
			// Avoid using mixin so we can pass custom focus shadow properly
			box-shadow: $focusBoxShadow;
		}
	}
}

@mixin section-button-variant($background, $color, $border: $background, $hover-background: color-yiq($background, darken($background, 7.5%), lighten($background, 7.5%)), $hover-border: color-yiq($border, darken($border, 10%), lighten($border, 10%)), $active-background: color-yiq($border, darken($background, 10%), lighten($background, 10%)), $active-border: color-yiq($border, darken($border, 12.5%), lighten($border, 12.5%))) {
	color: $color;
	@include gradient-bg($background);
	border-color: $border;
	@include box-shadow($btn-box-shadow);

	@include hover() {
		color: $color;
		@include gradient-bg($hover-background);
		border-color: $hover-border;
	}

	&:focus,
	&.focus {
		color: $color;
		@include gradient-bg($hover-background);
		border-color: $hover-border;

		@if $enable-shadows {
			@include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));
		} @else {
			// Avoid using mixin so we can pass custom focus shadow properly
			box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
		}
	}

	// Disabled comes first so active can properly restyle
	&.disabled,
	&:disabled {
		color: $color;
		background-color: $background;
		border-color: $border;
		// Remove CSS gradients if they're enabled
		@if $enable-gradients {
			background-image: none;
		}
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		color: $color;
		background-color: $active-background;
		@if $enable-gradients {
		  background-image: none; // Remove the gradient for the pressed/active state
		}
		border-color: $active-border;

		&:focus {
			@if $enable-shadows and $btn-active-box-shadow != none {
				@include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));
			} @else {
				// Avoid using mixin so we can pass custom focus shadow properly
				box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
			}
		}
	}
}

@mixin section-button-outline-variant($color, $color-hover, $active-background: $color, $active-border: $color) {
	color: $color;
	border-color: $color;

	@include hover() {
		color: $color-hover;
		background-color: $active-background;
		border-color: $active-border;
	}

	&:focus,
	&.focus {
		box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
	}

	&.disabled,
	&:disabled {
		color: $color;
		background-color: transparent;
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		color: $color-hover;
		background-color: $active-background;
		border-color: $active-border;

		&:focus {
			@if $enable-shadows and $btn-active-box-shadow != none {
				@include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));
			} @else {
				// Avoid using mixin so we can pass custom focus shadow properly
				box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
			}
		}
	}
}