// Forms
// -----------------------------------------------------------------------------------------

@include section-style() {

	.form-control {
		color: section-var(form_text_color);
		background-color: section-var(form_bg_color);
		border: $input-border-width solid section-var(form_border_color);
		@include border-radius($input-border-radius, 0);
		@include section-form-control-focus(section-var(form_text_color), section-var(form_bg_color), section-var(form_border_color), none, none);

		&::placeholder {
			color: lighten(section-var(form_text_color), 15%);
		}

		&[readonly] {
			background-color: lighten(section-var(form_bg_color), 15%);
		}
	}

	select.form-control {
		&:focus::-ms-value {
			color: section-var(form_text_color);
			background-color: section-var(form_bg_color);
		}
	}

	.form-floating {

		> label {
			color: lighten(section-var(form_text_color), 15%);
		}
	}

	$form-check-input-bg-gradient: linear-gradient(180deg, mix(section-var(form_bg_color), section-var(form_border_color), 15%), section-var(form_border_color)) repeat-x;

	$form-check-input-checked-color: section-var(form_bg_color);
	$form-check-input-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-checked-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/></svg>") !default;

	$form-check-radio-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$form-check-input-checked-color}'/></svg>") !default;

	$form-check-input-indeterminate-color: section-var(form_bg_color);
	$form-check-input-indeterminate-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form-check-input-indeterminate-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/></svg>");

	.form-check-input {
		background-color: section-var(form_bg_color);
		border: $form-check-input-border-width solid section-var(form_border_color);

		&:focus {
			border-color: color-yiq(section-var(form_border_color), darken(section-var(form_border_color), 10%), lighten(section-var(form_border_color), 10%));
			box-shadow: $form-check-input-focus-box-shadow;
		}

		&:checked {
			background-color: section-var(indicator_color);
			border-color: section-var(indicator_color);

			&[type="checkbox"] {
				@if $enable-gradients {
					background-image: escape-svg($form-check-input-checked-bg-image), $form-check-input-bg-gradient;
				} @else {
					background-image: escape-svg($form-check-input-checked-bg-image);
				}
			}

			&[type="radio"] {
				@if $enable-gradients {
					background-image: escape-svg($form-check-radio-checked-bg-image), $form-check-input-bg-gradient;
				} @else {
					background-image: escape-svg($form-check-radio-checked-bg-image);
				}
			}
		}

		&[type="checkbox"]:indeterminate {
			background-color: section-var(form_bg_color);
			border-color: color-yiq(section-var(form_border_color), darken(section-var(form_border_color), 10%), lighten(section-var(form_border_color), 10%));

			@if $enable-gradients {
				background-image: escape-svg($form-check-input-indeterminate-bg-image), $form-check-input-bg-gradient;
			} @else {
				background-image: escape-svg($form-check-input-indeterminate-bg-image);
			}
		}
	}

	$form-switch-color: section-var(form_text_color);
	$form-switch-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-color}'/></svg>");

	$form-switch-focus-color: section-var(form_text_color);
	$form-switch-focus-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-focus-color}'/></svg>");

	$form-switch-checked-color: section-var(form_bg_color);
	$form-switch-checked-bg-gradient: linear-gradient(180deg, mix(section-var(form_bg_color), section-var(form_border_color), 15%), section-var(form_border_color)) repeat-x;
	$form-switch-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$form-switch-checked-color}'/></svg>");

	.form-switch {

		.form-check-input {
			background-image: escape-svg($form-switch-bg-image);

			&:focus {
				background-image: escape-svg($form-switch-focus-bg-image);
			}

			&:checked {

				@if $enable-gradients {
					background-image: escape-svg($form-switch-checked-bg-image), $form-switch-checked-bg-gradient;
				} @else {
					background-image: escape-svg($form-switch-checked-bg-image);
				}
			}
		}
	}

	.input-group-text {
		color: section-var(form_text_color);
		background-color: section-var(form_bg_color);
		border: $input-border-width solid solid section-var(form_border_color);
		@include border-radius($input-border-radius);
	}

	$box-shadow-inset: inset 0 1px 2px rgba(section-var(form_border_color), .075);
	$form-select-color: section-var(form_text_color);
	$form-select-bg: section-var(form_bg_color);
	$form-select-disabled-color: null;
	$form-select-disabled-bg: color-yiq(section-var(form_bg_color), darken(section-var(form_bg_color), 10%), lighten(section-var(form_bg_color), 10%));
	$form-select-disabled-border-color:  color-yiq(section-var(form_border_color), darken(section-var(form_border_color), 10%), lighten(section-var(form_border_color), 10%));

	$form-select-indicator-color: section-var(icon_color);
	$form-select-indicator: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$form-select-indicator-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/></svg>");

	$form-select-border-color: section-var(form_border_color);
	$form-select-box-shadow: none;

	$form-select-focus-border-color: section-var(form_border_color);
	$form-select-focus-box-shadow: none;

	.form-select {
		color: $form-select-color;
		background-color: $form-select-bg;
		background-image: escape-svg($form-select-indicator);
		border: $form-select-border-width solid $form-select-border-color;
		@include box-shadow($form-select-box-shadow);
		@include section-form-control-focus($form-select-color, $form-select-bg, $form-select-border-color, none, none);

		&:disabled {
			color: $form-select-disabled-color;
			background-color: $form-select-disabled-bg;
			border-color: $form-select-disabled-border-color;
		}

		&:-moz-focusring {
			text-shadow: 0 0 0 $form-select-color;
		}
	}
}

// From control text
.form-control-text {
	border: 0;
	margin: 0;
	padding: 0;
	width: auto;
	height: auto;
	-webkit-appearance: none;
    -moz-appearance: none;

	&:focus {
		outline: 0;
	}
}


// Select
.form-select {
	display: block;
	width: 100%;
	padding: $form-select-padding-y $form-select-indicator-padding $form-select-padding-y $form-select-padding-x;
	font-family: $form-select-font-family;
	@include font-size($form-select-font-size);
	font-weight: $form-select-font-weight;
	line-height: $form-select-line-height;
	background-repeat: no-repeat;
	background-position: $form-select-bg-position;
	background-size: $form-select-bg-size;
	@include border-radius($form-select-border-radius, 0);
	appearance: none;

	&:focus {
		outline: 0;
	}

	&[multiple],
	&[size]:not([size="1"]) {
		padding-right: $form-select-padding-x;
		background-image: none;
	}

	&:-moz-focusring {
		color: transparent;
	}
}

.form-select-sm {
	padding-top: $form-select-padding-y-sm;
	padding-bottom: $form-select-padding-y-sm;
	padding-left: $form-select-padding-x-sm;
	line-height: $form-select-line-height-sm;
	@include font-size($form-select-font-size-sm);
}

.form-select-lg {
	padding-top: $form-select-padding-y-lg;
	padding-bottom: $form-select-padding-y-lg;
	padding-left: $form-select-padding-x-lg;
	line-height: $form-select-line-height-lg;
	@include font-size($form-select-font-size-lg);
}


// Check / radio
.form-group.form-check + .form-group.form-check {
	margin-top: -#{$form-group-margin-bottom / 2}
}

.form-check {
	display: block;
	min-height: $form-check-min-height;
	padding-left: $form-check-padding-start;

	.form-check-input {
		float: left;
		margin-left: $form-check-padding-start * -1;
	}
}

.form-check-input {
	width: $form-check-input-width;
	height: $form-check-input-width;
	margin-top: ($line-height-base - $form-check-input-width) / 2;
	vertical-align: top;
	background-repeat: no-repeat;
	background-position: center;
	background-size: contain;
	appearance: none;
	cursor: pointer;
	@include transition($form-check-transition);

	&[type="checkbox"] {
		@include border-radius($form-check-input-border-radius);
	}

	&[type="radio"] {
		border-radius: $form-check-radio-border-radius;
	}

	&:active {
		filter: $form-check-input-active-filter;
	}

	&:focus {
		outline: 0;
	}

	&:disabled {
		pointer-events: none;
		filter: none;
		opacity: $form-check-input-disabled-opacity;
	}

	&[disabled],
	&:disabled {
		cursor: default;

		~ .form-check-label {
			cursor: default;
			opacity: $form-check-label-disabled-opacity;
		}
	}
}

.form-check-label {
	cursor: pointer;
}


// Switch
.form-switch {
	padding-left: $form-switch-padding-start;

	.form-check-input {
		width: $form-switch-width;
		margin-left: $form-switch-padding-start * -1;
		background-position: left center;
		@include border-radius($form-switch-border-radius);
		@include transition($form-switch-transition);

		&:checked {
			background-position: $form-switch-checked-bg-position;
		}
	}
}

.form-check-inline {
	display: inline-block;
	margin-right: $form-check-inline-margin-end;
}

.btn-check {
	position: absolute;
	clip: rect(0, 0, 0, 0);
	pointer-events: none;

	&[disabled],
	&:disabled {
		+ .btn {
			pointer-events: none;
			filter: none;
			opacity: $form-check-btn-check-disabled-opacity;
		}
	}
}


// Form floating
.form-floating {
	position: relative;

	> .form-control,
	> .form-select {
		height: $form-floating-height;
		padding: $form-floating-padding-y $form-floating-padding-x;
	}

	> label {
		display: inline-flex;
		align-items: center;
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		padding: $form-floating-padding-y $form-floating-padding-x;
		pointer-events: none;
		border: $input-border-width solid transparent;
		transform-origin: 0 0;
		margin-bottom: 0;
		@include transition($form-floating-transition);
	}

	> .form-control {
		&::placeholder {
			color: transparent !important;
		}

		&:focus,
		&:not(:placeholder-shown) {
			padding-top: $form-floating-input-padding-t;
			padding-bottom: $form-floating-input-padding-b;
		}

		&:-webkit-autofill {
			padding-top: $form-floating-input-padding-t;
			padding-bottom: $form-floating-input-padding-b;
		}
	}

	> .form-select {
		padding-top: $form-floating-input-padding-t;
		padding-bottom: $form-floating-input-padding-b;
	}

	> .form-control:focus,
	> .form-control:not(:placeholder-shown),
	> .form-select {
		~ label {
			opacity: $form-floating-label-opacity;
			transform: $form-floating-label-transform;
		}
	}
	> .form-control:-webkit-autofill {
		~ label {
			opacity: $form-floating-label-opacity;
			transform: $form-floating-label-transform;
		}
	}
}